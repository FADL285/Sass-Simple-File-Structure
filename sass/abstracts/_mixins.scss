// !!!!!!---- Media Query Manager ----!!!!!!
// We use bootstrap containers sizes.
/* 
*  0 - 576px:       xs
*  576px - 768px:   sm
*  768px - 992px:   md
*  992px - 1200px:  lg
*  1200px - 1400px: xl
*  >= 1400px  :     xxl
*/

$breakpoints: (
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px,
  'xxl': 1400px,
);
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  } @else {
    @error 'Error!, This viewport not exits in media query manager';
  }
}

// * ===== Usage ===== * //
/*
// Example #1:
.site-header {
  padding: 2rem;
  font-size: 1.8rem;
  @include mq('xl') {
    padding-top: 4rem;
    font-size: 2.4rem;
  }
}

// Example #2:
.site-header {
  padding: 2rem;
  font-size: 1.8rem;
  @include mq('md', 'max') {
    padding-top: 4rem;
    font-size: 2.4rem;
  }
}

*/

// !!!!!!---- End Media Query Manager ----!!!!!!

// Mixins

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// /////////////

@mixin font-face($font-name, $path, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($path + '.eot');
    src: url($path + '.eot?#iefix') format('embedded-opentype'),
      url($path + '.woff') format('woff'),
      url($path + '.ttf') format('truetype'),
      url($path + '.svg##{$font-name}') format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}

// * ===== Usage ===== * //
/*
@include font-face(fadl, "../fonts/fadlFont", bold, normal);
@include font-face(fadl, "../fonts/fadlFont");
*/

// /////////////

@mixin abs-position($top, $right, $bottom, $left) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// /////////////

@mixin line-clamp($lines) {
  @if type-of($lines) == number {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  } @else {
    @error 'error!, line-clamp property must be a number';
  }
}

// /////////////

@mixin cover-background {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

// /////////////

@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}

// /////////////

@mixin pseudo(
  $width: 100%,
  $height: 100%,
  $display: inline-block,
  $pos: absolute,
  $content: ''
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}

// * ===== Usage ===== * //
/*
div {
  position: relative;
  width: 200px;
  height: 200px;

  &:after {
    @include pseudo(100px, 100px);
  }
}
*/

// /////////////

@mixin skew-background-transition($initial, $hover, $inverted: false) {
  background: linear-gradient(
    90deg,
    $hover 0%,
    $hover 50%,
    $initial 50%,
    $initial 100%
  );
  background-repeat: no-repeat;
  background-size: 200% 100%;

  background-position: right bottom;
  @if $inverted {
    background-position: left bottom;
  }
  transition: background-position 0.25s ease-out;

  &:hover {
    background-position: left bottom;
    @if $inverted {
      background-position: right bottom;
    }
  }
}

// * ===== Usage ===== * //
/*
button {
  margin:1em;
  padding: 1em 2em;
  font-size: 1.2rem;
  cursor: pointer;
  border: 0;
  color: white;

  &:nth-of-type(1) {
    @include skew-background-transition(#4CAF50, #3F51B5);
  }

  &:nth-of-type(2) {
    color: #424242;
    @include skew-background-transition(#FFEE58, #e57373, true);
  }

  &:nth-of-type(3) {
    @include skew-background-transition(#311B92, #1976D2);
  }
}
*/
